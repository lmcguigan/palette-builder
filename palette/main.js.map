{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/json-dialog/json-dialog.component.ts","./src/app/components/json-dialog/json-dialog.component.html","./src/app/shared/first-letter.pipe.ts","./src/app/utils/convert-color-utils.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/color-edit-dialog/color-edit-dialog.component.ts","./src/app/components/color-edit-dialog/color-edit-dialog.component.html","./src/app/app.module.ts","./src/app/components/sign-in-dialog/sign-in-dialog.component.ts","./src/app/components/sign-in-dialog/sign-in-dialog.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  FIREBASE_API_KEY: process.env['FIREBASE_API_KEY'],\n  FIREBASE_AUTH_DOMAIN: process.env['FIREBASE_AUTH_DOMAIN'],\n  FIREBASE_DATABASE_URL: process.env['FIREBASE_DATABASE_URL'],\n  FIREBASE_PROJECT_ID: process.env['FIREBASE_DATABASE_URL'],\n  FIREBASE_STORAGE_BUCKET: process.env['FIREBASE_STORAGE_BUCKET'],\n  FIREBASE_MESSAGING_SENDER_ID: process.env['FIREBASE_MESSAGING_SENDER_ID'],\n  FIREBASE_APP_ID: process.env['FIREBASE_APP_ID']\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {IColor} from '../../interfaces/colors'\n\ninterface IJsonDialogData {\n  colors: IColor[]\n}\n\n@Component({\n  selector: 'app-json-dialog',\n  templateUrl: './json-dialog.component.html',\n  styleUrls: ['./json-dialog.component.scss']\n})\nexport class JsonDialogComponent implements OnInit {\n  object = {}\n  stringifiedObject: string\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: IJsonDialogData\n  ) { }\n\n  ngOnInit(): void {\n    let jsonObject = {}\n    this.data.colors.forEach((color) => {\n      jsonObject[color.name.toLowerCase()] = color.hex ?? color.color; \n    })\n    this.object = jsonObject;\n    this.stringifiedObject = JSON.stringify(jsonObject);\n  }\n\n}\n","<h1 mat-dialog-title>JSON</h1>\n<div mat-dialog-content>\n  <pre>{{object | json}}</pre>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button [cdkCopyToClipboard]=\"stringifiedObject\">Copy value</button>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'firstLetter'\n})\nexport class FirstLetterPipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): unknown {\n    return value.substring(0,1).toUpperCase();\n  }\n\n}\n","import { IColor, SliderControlNameType } from '../interfaces/colors';\n\nexport function componentToHex(n: number): string{\n    const hex = n.toString(16);\n    return hex.length > 1 ? hex : '0' + hex;\n}\n\nexport function convertRgbToHex(r: number, g: number, b: number): string{\n    return '#'+ componentToHex(r) + componentToHex(g) + componentToHex(b)\n}\n\nexport function getRgbFromChannels(hue: number, chroma: number, x: number, amountToAdd: number){\n    let rgb: number[];\n    const i = 60\n    if(0 <= hue && hue < i * 2){\n        const mid = i\n        rgb = [\n            // red\n            hue < mid ? chroma : x,\n            // green\n            hue < mid ? x : chroma, \n            // blue\n            0\n        ]\n    } else if (i * 2 <= hue && hue < i * 4){\n        const mid = i * 3\n        rgb = [\n            // red\n            0,\n            // green\n            hue < mid ? chroma : x,\n            // blue\n            hue < mid ? x : chroma\n        ]\n    } else if (i * 4 <= hue && hue < i * 6) {\n        const mid = i * 5\n        rgb = [\n            // red\n            hue < mid ? x : chroma,\n            // green\n            0,\n            // blue\n            hue < mid ? chroma : x\n        ]\n    }\n    return rgb.map((val) => Math.round((val + amountToAdd) * 255))\n}\n\nexport function convertHslToHex (hue: number, s: number, l: number): string{\n    const satPercent = s/100\n    const lightnessPercent = l/100\n    const chroma = satPercent * (1 - Math.abs(2 * lightnessPercent - 1))\n    const x = chroma * (1 - Math.abs((hue / 60) % 2 - 1))\n    const amountToAdd = lightnessPercent - chroma/2\n    const rgbArray = getRgbFromChannels(hue, chroma, x, amountToAdd)\n    return convertRgbToHex(rgbArray[0], rgbArray[1], rgbArray[2])\n}\nexport function getHex (vals: [number, number, number], mode: 'HSL' | 'RGB'): string{\n    return mode === 'HSL' ? convertHslToHex(vals[0], vals[1], vals[2]) : convertRgbToHex(vals[0], vals[1], vals[2])\n}\n\nexport function convertHex(h: string, targetMode: 'HSL' | 'RGB'){\n    const array =  h.substring(1).split('').map((e, i, a) => (i + 1 < a.length) ? parseInt(\"0x\" + e + a[i+1]) : null)\n        .filter((e, i) => i % 2 === 0)\n    if (targetMode === 'RGB') {\n        return [\n            {\n                name: 'red',\n                max: 255,\n                currentValue: array[0]  \n            }, \n            {\n                name: 'green',\n                max: 255,\n                currentValue: array[1]  \n            }, \n            {\n                name: 'blue',\n                max: 255,\n                currentValue: array[2]  \n            }\n        ]\n    }\n    else {\n    let r = array[0] / 255;\n    let g = array[1] / 255;\n    let b = array[2] / 255;\n    let cmin = Math.min(r,g,b)\n    let cmax = Math.max(r,g,b)\n    let delta = cmax - cmin\n    let h = 0\n    if (delta == 0)\n        h = 0;\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6;\n    else if (cmax == g)\n        h = (b - r) / delta + 2;\n    else\n        h = (r - g) / delta + 4;\n    h = Math.round(h * 60);\n    let l = (cmax + cmin) / 2;\n    let s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    s = +(s * 100).toFixed(0);\n    l = +(l * 100).toFixed(0);\n        return [\n            {\n              name: 'hue',\n              max: 359,\n              currentValue: h,\n            }, \n            { \n              name: 'saturation',\n              max: 100,\n              currentValue: s,\n            }, \n            { \n              name: 'lightness',\n              max: 100,\n              currentValue: l,\n            }\n          ]\n    }\n}\n\nexport function getValueFromControls(name: SliderControlNameType, controls: any[]){\n    return controls.find((control) => control.name === name).currentValue\n}\n\nexport function getColorString(colorMode: string, controls: any[]){\n    if(colorMode === 'RGB'){\n        return `rgb(${getValueFromControls('red', controls)}, ${getValueFromControls('green', controls)}, ${getValueFromControls('blue', controls)})`\n    } else {\n        return`hsl(${getValueFromControls('hue', controls)}, ${getValueFromControls('saturation', controls)}%, ${getValueFromControls('lightness', controls)}%)`\n    }\n}\n\nexport function getHSLColorObject (color: IColor): IColor {\n    const obj = Object.assign({}, color);\n    const newControls = convertHex(obj.hex, \"HSL\");\n    obj.editMode = \"HSL\"\n    obj.controls = newControls\n    obj.color = getColorString(\"HSL\", newControls);\n    return obj\n}\n\nexport function mapColorsToLightnessValues(colors: IColor[]) {\n    const allHSL = colors.map((color) => color.editMode !== 'HSL' ? getHSLColorObject(color) : color);\n    return allHSL.map((color) => color.controls.find((cont) => cont.name === 'lightness').currentValue);\n}\n\nexport function getDarkestColor (colors: IColor[]): IColor {\n    const lightnessValues = mapColorsToLightnessValues(colors)\n    return colors[lightnessValues.indexOf(Math.min(...lightnessValues))];\n}\n\nexport function getLightestColor (colors: IColor[]): IColor {\n    const lightnessValues = mapColorsToLightnessValues(colors);\n    return colors[lightnessValues.indexOf(Math.max(...lightnessValues))];\n}","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SignInDialogComponent } from './components/sign-in-dialog/sign-in-dialog.component';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'palette';\n  constructor(\n    private dialog: MatDialog,\n    public authService: AuthService,\n    private router: Router,\n  ){\n    this.authService.user$.subscribe();\n  }\n  onClickSignIn(){\n    this.dialog.open(SignInDialogComponent)\n  }\n  onClickMyAccount(){\n    this.router.navigate(['account'])\n  }\n  onClickBuilder(){\n    this.router.navigate(['/'])\n  }\n  onClickSignOut(){\n    this.authService.logout()\n  }\n}\n","<div>\n  <mat-toolbar>\n    <h1>Pigmentastico</h1>\n    <span class=\"spacer\"></span>\n    <div *ngIf=\"(authService.user$|async); else anon\">\n      <button mat-button color=\"primary\" (click)=\"onClickMyAccount()\">My Account</button>\n      <button mat-button color=\"primary\" (click)=\"onClickBuilder()\">Builder</button>\n      <button mat-button color=\"accent\" (click)=\"onClickSignOut()\">Sign Out</button>\n    </div>\n    <ng-template #anon>\n      <button mat-button color=\"accent\" (click)=\"onClickSignIn()\">Sign In</button>\n    </ng-template>\n  </mat-toolbar>\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IColor, ISliderControl, colorMode } from 'src/app/interfaces/colors';\nimport { getColorString, getHex, convertHex } from 'src/app/utils/convert-color-utils';\n\ninterface IColorEditDialogData {\n  selectedColor: IColor,\n}\n\n@Component({\n  selector: 'app-color-edit-dialog',\n  templateUrl: './color-edit-dialog.component.html',\n  styleUrls: ['./color-edit-dialog.component.scss']\n})\nexport class ColorEditDialogComponent implements OnInit {\n  colorName: string;\n  colorMode: colorMode;\n  controls: ISliderControl[]\n  currentColorString: string;\n  currentColorHex: string;\n  constructor(\n    @Inject(MAT_DIALOG_DATA) \n    public data: IColorEditDialogData,\n    private dialogRef: MatDialogRef<ColorEditDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n    this.colorName = this.data.selectedColor.name;\n    this.colorMode = this.data.selectedColor.editMode;\n    this.controls = this.data.selectedColor.controls;\n    this.currentColorString = this.data.selectedColor.color;\n    this.currentColorHex = this.data.selectedColor.hex;\n  }\n  onColorModeChanged(e){\n    this.colorMode = e;\n    this.controls = convertHex(this.currentColorHex, e);\n    this.updateColorString();\n  }\n  updateColorString(){\n    const controlValues = this.controls.map((cont) => cont.currentValue) as [number, number, number]\n    this.currentColorString = getColorString(this.colorMode, this.controls);\n    this.currentColorHex = getHex(controlValues, this.colorMode);\n  }\n  onSliderChanged(){\n    this.updateColorString()\n  }\n  onSave(){\n    const controlValues = this.controls.map((cont) => cont.currentValue) as [number, number, number]\n    this.dialogRef.close({\n      name: this.colorName,\n      color: getColorString(this.colorMode, this.controls),\n      editMode: this.colorMode,\n      hex: getHex(controlValues, this.colorMode),\n      controls: this.controls,\n    })\n  }\n  onDiscard(){\n    this.dialogRef.close()\n  }\n\n}\n","<h1 mat-dialog-title>Edit Color Swatch</h1>\n<div mat-dialog-content>\n  <div class=\"mixer\">\n    <div class=\"swatch-holder\">\n      <div class=\"color-swatch\" [style.background-color]=\"data.selectedColor.color\"></div>\n      <div class=\"color-swatch\" [style.background-color]=\"currentColorString\"></div>\n    </div>\n    <div>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Select color mode</mat-label>\n        <mat-select [ngModel]=\"colorMode\" (ngModelChange)=\"onColorModeChanged($event)\">\n        <mat-option value=\"RGB\">RGB</mat-option>\n        <mat-option value=\"HSL\">HSL</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div *ngFor=\"let control of controls\" class=\"slider-outer\">\n          <span>{{control?.name | firstLetter}}</span>\n          <mat-slider [(ngModel)]=\"control.currentValue\" (ngModelChange)=\"onSliderChanged()\" min=\"0\" [max]=\"control.max\"></mat-slider>\n          <span>{{control.currentValue}}</span>\n      </div>\n    </div>\n  </div>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Color name</mat-label>\n    <input matInput [(ngModel)]=\"colorName\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button (click)=\"onSave()\">Save changes</button>\n  <button mat-raised-button (click)=\"onDiscard()\">Discard changes</button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport {ClipboardModule} from '@angular/cdk/clipboard'\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ColorEditDialogComponent } from './components/color-edit-dialog/color-edit-dialog.component'\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { JsonDialogComponent } from './components/json-dialog/json-dialog.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FirstLetterPipe } from './shared/first-letter.pipe';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { SignInDialogComponent } from './components/sign-in-dialog/sign-in-dialog.component';\nimport { AuthService } from './services/auth.service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { environment } from 'src/environments/environment';\n\nvar firebaseConfig = {\n  apiKey: environment.FIREBASE_API_KEY,\n  authDomain: environment.FIREBASE_AUTH_DOMAIN,\n  databaseURL: environment.FIREBASE_DATABASE_URL,\n  projectId: environment.FIREBASE_PROJECT_ID,\n  storageBucket: environment.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: environment.FIREBASE_MESSAGING_SENDER_ID,\n  appId: environment.FIREBASE_APP_ID\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ColorEditDialogComponent,\n    JsonDialogComponent,\n    SignInDialogComponent,\n    FirstLetterPipe,\n  ],\n  entryComponents: [\n    ColorEditDialogComponent,\n    JsonDialogComponent,\n    SignInDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFirestoreModule, // firestore\n    AngularFireAuthModule, // auth\n    AngularFireStorageModule, // storage\n    BrowserAnimationsModule,\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatInputModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatDividerModule,\n    MatListModule,\n    MatSnackBarModule,\n    FormsModule,\n    MatFormFieldModule,\n    ClipboardModule,\n  ],\n  providers: [\n    AuthService,\n    MatSnackBarModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in-dialog',\n  templateUrl: './sign-in-dialog.component.html',\n  styleUrls: ['./sign-in-dialog.component.scss']\n})\nexport class SignInDialogComponent implements OnInit {\n  email: string\n  password: string\n  showError: boolean\n  constructor(\n    private authService: AuthService,\n    private dialogRef: MatDialogRef<SignInDialogComponent>,\n    private cd: ChangeDetectorRef\n  ) { }\n\n  ngOnInit(): void {\n  }\n  onSignIn() {\n    this.authService.login(this.email, this.password)\n      .then(() => {\n        this.dialogRef.close()\n      }).catch((err) => {\n        // show error\n        this.showError = true\n        console.log(this.showError)\n        this.cd.detectChanges()\n      })\n  }\n  onSignUp() {\n    this.authService.signUp(this.email, this.password)\n      .then(() => {\n        this.dialogRef.close()\n      }).catch((err) => {\n        // show error\n        console.log(err)\n      })\n  }\n\n}\n","<h1 mat-dialog-title>Sign In</h1>\n<div mat-dialog-content class=\"max-width\">\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Email</mat-label>\n        <input type=\"email\" matInput [(ngModel)]=\"email\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Password</mat-label>\n        <input type=\"password\" matInput [(ngModel)]=\"password\">\n    </mat-form-field>\n    <p *ngIf=\"showError\" color=\"warn\">The email and password don't correspond with any in our records.</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-raised-button (click)=\"onSignIn()\">Sign In</button>\n    <button mat-raised-button color=\"warn\" (click)=\"onSignUp()\">I Need to Sign Up</button>\n</div>","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { BehaviorSubject } from 'rxjs';\nimport { User } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n    user$ = new BehaviorSubject<User | null>(null)\n    constructor(\n        public auth: AngularFireAuth\n    ){\n        this.auth.user.subscribe((value) => {\n            if(value){\n                this.user$.next(value);\n            } else {\n                this.user$.next(null)\n            }\n        })\n    }\n    signUp(email: string, password: string){\n        return this.auth.createUserWithEmailAndPassword(email, password);\n    }\n    async login(email: string, password: string){\n        return this.auth.signInWithEmailAndPassword(email, password)\n        .then(res => res)\n        .catch(err => {throw err});\n    }\n    logout() {\n        return this.auth.signOut();\n    }\n    async updateName(name: string) {\n        return (await this.auth.currentUser).updateProfile({displayName: name});\n        \n    }\n    async updateEmail(email: string) {\n        return (await this.auth.currentUser).updateEmail(email);\n        \n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', loadChildren: () => import('./views/main/main.module').then(m => m.MainModule)},\n  // { path: 'preview', loadChildren: () => import('./views/preview/preview.module').then(m => m.PreviewModule) },\n  { path: 'account', loadChildren: () => import('./views/account/account.module').then(m => m.AccountModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}